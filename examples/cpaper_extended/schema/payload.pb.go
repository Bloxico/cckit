// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cpaper_extended/schema/payload.proto

package schema

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// IssueCommercialPaper event
type IssueCommercialPaper struct {
	Issuer       string               `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	PaperNumber  string               `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	IssueDate    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	MaturityDate *timestamp.Timestamp `protobuf:"bytes,4,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	FaceValue    int32                `protobuf:"varint,5,opt,name=face_value,json=faceValue,proto3" json:"face_value,omitempty"`
	// external_id - another unique constraint
	ExternalId           string   `protobuf:"bytes,6,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueCommercialPaper) Reset()         { *m = IssueCommercialPaper{} }
func (m *IssueCommercialPaper) String() string { return proto.CompactTextString(m) }
func (*IssueCommercialPaper) ProtoMessage()    {}
func (*IssueCommercialPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5dcbaa3d8b7973, []int{0}
}

func (m *IssueCommercialPaper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueCommercialPaper.Unmarshal(m, b)
}
func (m *IssueCommercialPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueCommercialPaper.Marshal(b, m, deterministic)
}
func (m *IssueCommercialPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueCommercialPaper.Merge(m, src)
}
func (m *IssueCommercialPaper) XXX_Size() int {
	return xxx_messageInfo_IssueCommercialPaper.Size(m)
}
func (m *IssueCommercialPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueCommercialPaper.DiscardUnknown(m)
}

var xxx_messageInfo_IssueCommercialPaper proto.InternalMessageInfo

func (m *IssueCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *IssueCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *IssueCommercialPaper) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *IssueCommercialPaper) GetMaturityDate() *timestamp.Timestamp {
	if m != nil {
		return m.MaturityDate
	}
	return nil
}

func (m *IssueCommercialPaper) GetFaceValue() int32 {
	if m != nil {
		return m.FaceValue
	}
	return 0
}

func (m *IssueCommercialPaper) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

// BuyCommercialPaper event
type BuyCommercialPaper struct {
	Issuer               string               `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	PaperNumber          string               `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	CurrentOwner         string               `protobuf:"bytes,3,opt,name=current_owner,json=currentOwner,proto3" json:"current_owner,omitempty"`
	NewOwner             string               `protobuf:"bytes,4,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	Price                int32                `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	PurchaseDate         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BuyCommercialPaper) Reset()         { *m = BuyCommercialPaper{} }
func (m *BuyCommercialPaper) String() string { return proto.CompactTextString(m) }
func (*BuyCommercialPaper) ProtoMessage()    {}
func (*BuyCommercialPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5dcbaa3d8b7973, []int{1}
}

func (m *BuyCommercialPaper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyCommercialPaper.Unmarshal(m, b)
}
func (m *BuyCommercialPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyCommercialPaper.Marshal(b, m, deterministic)
}
func (m *BuyCommercialPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyCommercialPaper.Merge(m, src)
}
func (m *BuyCommercialPaper) XXX_Size() int {
	return xxx_messageInfo_BuyCommercialPaper.Size(m)
}
func (m *BuyCommercialPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyCommercialPaper.DiscardUnknown(m)
}

var xxx_messageInfo_BuyCommercialPaper proto.InternalMessageInfo

func (m *BuyCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *BuyCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *BuyCommercialPaper) GetCurrentOwner() string {
	if m != nil {
		return m.CurrentOwner
	}
	return ""
}

func (m *BuyCommercialPaper) GetNewOwner() string {
	if m != nil {
		return m.NewOwner
	}
	return ""
}

func (m *BuyCommercialPaper) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *BuyCommercialPaper) GetPurchaseDate() *timestamp.Timestamp {
	if m != nil {
		return m.PurchaseDate
	}
	return nil
}

// RedeemCommercialPaper event
type RedeemCommercialPaper struct {
	Issuer               string               `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	PaperNumber          string               `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	RedeemingOwner       string               `protobuf:"bytes,3,opt,name=redeeming_owner,json=redeemingOwner,proto3" json:"redeeming_owner,omitempty"`
	RedeemDate           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=redeem_date,json=redeemDate,proto3" json:"redeem_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RedeemCommercialPaper) Reset()         { *m = RedeemCommercialPaper{} }
func (m *RedeemCommercialPaper) String() string { return proto.CompactTextString(m) }
func (*RedeemCommercialPaper) ProtoMessage()    {}
func (*RedeemCommercialPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5dcbaa3d8b7973, []int{2}
}

func (m *RedeemCommercialPaper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemCommercialPaper.Unmarshal(m, b)
}
func (m *RedeemCommercialPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemCommercialPaper.Marshal(b, m, deterministic)
}
func (m *RedeemCommercialPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemCommercialPaper.Merge(m, src)
}
func (m *RedeemCommercialPaper) XXX_Size() int {
	return xxx_messageInfo_RedeemCommercialPaper.Size(m)
}
func (m *RedeemCommercialPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemCommercialPaper.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemCommercialPaper proto.InternalMessageInfo

func (m *RedeemCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *RedeemCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *RedeemCommercialPaper) GetRedeemingOwner() string {
	if m != nil {
		return m.RedeemingOwner
	}
	return ""
}

func (m *RedeemCommercialPaper) GetRedeemDate() *timestamp.Timestamp {
	if m != nil {
		return m.RedeemDate
	}
	return nil
}

func init() {
	proto.RegisterType((*IssueCommercialPaper)(nil), "cckit.examples.cpaper_extended.schema.IssueCommercialPaper")
	proto.RegisterType((*BuyCommercialPaper)(nil), "cckit.examples.cpaper_extended.schema.BuyCommercialPaper")
	proto.RegisterType((*RedeemCommercialPaper)(nil), "cckit.examples.cpaper_extended.schema.RedeemCommercialPaper")
}

func init() {
	proto.RegisterFile("cpaper_extended/schema/payload.proto", fileDescriptor_5d5dcbaa3d8b7973)
}

var fileDescriptor_5d5dcbaa3d8b7973 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0x36, 0x6b, 0x37, 0xb8, 0x67, 0xb7, 0x2a, 0x41, 0x21, 0x2c, 0x62, 0x97, 0xd5, 0xe2, 0x8a,
	0x34, 0x03, 0x0a, 0x0a, 0xe2, 0x8d, 0x5b, 0x41, 0x7a, 0xa3, 0xb2, 0x88, 0x88, 0x37, 0x61, 0x32,
	0x39, 0xcd, 0x0e, 0xcd, 0x64, 0xc2, 0x64, 0xa6, 0xe9, 0xbe, 0x89, 0x2f, 0xe3, 0x7b, 0x78, 0x27,
	0xf8, 0x24, 0x32, 0x33, 0x49, 0x75, 0x4b, 0x2f, 0xea, 0x45, 0xef, 0x96, 0xf3, 0xfd, 0xcc, 0x7c,
	0xdf, 0xec, 0x09, 0x3c, 0x66, 0x35, 0xad, 0x51, 0xa5, 0x78, 0xa6, 0xb1, 0xca, 0x31, 0x27, 0x0d,
	0x5b, 0xa3, 0xa0, 0xa4, 0xa6, 0x9b, 0x52, 0xd2, 0x3c, 0xa9, 0x95, 0xd4, 0x32, 0xda, 0x67, 0xec,
	0x84, 0xeb, 0x04, 0xcf, 0xa8, 0xa8, 0x4b, 0x6c, 0x92, 0x0b, 0xa2, 0xc4, 0x8b, 0xa6, 0x7b, 0x85,
	0x94, 0x45, 0x89, 0xc4, 0x89, 0x32, 0x73, 0x4c, 0x34, 0x17, 0xd8, 0x68, 0x2a, 0x6a, 0xef, 0x33,
	0x7d, 0x59, 0x70, 0xbd, 0x36, 0x59, 0xc2, 0xa4, 0x20, 0xa2, 0xe5, 0xfa, 0x44, 0xb6, 0xa4, 0x90,
	0x07, 0x0e, 0x3c, 0x38, 0xa5, 0x25, 0xcf, 0xa9, 0x96, 0xaa, 0x21, 0xe7, 0x3f, 0xbd, 0x6e, 0xfe,
	0x63, 0x00, 0xf7, 0x8e, 0x9a, 0xc6, 0xe0, 0xa1, 0x14, 0x02, 0x15, 0xe3, 0xb4, 0xfc, 0x64, 0x6f,
	0x10, 0x3d, 0x84, 0x90, 0xdb, 0xb9, 0x8a, 0x83, 0x59, 0xb0, 0x18, 0x2d, 0xc3, 0xdf, 0xbf, 0xf6,
	0x06, 0x5f, 0x83, 0x55, 0x37, 0x8d, 0x9e, 0xc2, 0xc4, 0x5f, 0xb5, 0x32, 0x22, 0x43, 0x15, 0x0f,
	0xb6, 0x58, 0x63, 0x87, 0x7d, 0x70, 0x50, 0xf4, 0x16, 0xc0, 0x89, 0xd2, 0x9c, 0x6a, 0x8c, 0x6f,
	0xce, 0x82, 0xc5, 0xf8, 0xf9, 0x34, 0xf1, 0x89, 0x92, 0x3e, 0x51, 0xf2, 0xb9, 0x4f, 0xe4, 0x4d,
	0x66, 0xc1, 0x6a, 0xe4, 0x54, 0xef, 0xa8, 0xc6, 0xe8, 0x3d, 0xec, 0x0a, 0xaa, 0x8d, 0xe2, 0x7a,
	0xe3, 0x5d, 0x76, 0xae, 0xec, 0x32, 0xe9, 0x85, 0xce, 0x68, 0x1f, 0xe0, 0x98, 0x32, 0x4c, 0x4f,
	0x69, 0x69, 0x30, 0x1e, 0xce, 0x82, 0xc5, 0xd0, 0x33, 0xef, 0xde, 0x58, 0x8d, 0x2c, 0xf2, 0xc5,
	0x02, 0xd1, 0x13, 0x18, 0xdb, 0x27, 0x50, 0x15, 0x2d, 0x53, 0x9e, 0xc7, 0xe1, 0x56, 0x38, 0xe8,
	0xa1, 0xa3, 0x7c, 0xfe, 0x7d, 0x00, 0xd1, 0xd2, 0x6c, 0xae, 0xb1, 0xbd, 0x67, 0xb0, 0xcb, 0x8c,
	0x52, 0x58, 0xe9, 0x54, 0xb6, 0x15, 0x2a, 0x57, 0xe0, 0x5f, 0xee, 0xa4, 0x03, 0x3f, 0x5a, 0x2c,
	0x7a, 0x04, 0xa3, 0x0a, 0xdb, 0x8e, 0xb8, 0xb3, 0x45, 0xbc, 0x55, 0x61, 0xeb, 0x49, 0x0f, 0x60,
	0x58, 0x2b, 0xce, 0x2e, 0xc6, 0xf7, 0x43, 0x5b, 0x75, 0x6d, 0x14, 0x5b, 0xd3, 0xa6, 0x7b, 0xb0,
	0xf0, 0xea, 0x55, 0xf7, 0x42, 0x5b, 0xf5, 0xfc, 0x67, 0x00, 0xf7, 0x57, 0x98, 0x23, 0x8a, 0x6b,
	0x6c, 0x87, 0xc0, 0x1d, 0xe5, 0xce, 0xe0, 0x55, 0x71, 0x69, 0x3f, 0xb7, 0xcf, 0x61, 0x1f, 0xfe,
	0x10, 0xc6, 0x7e, 0xf2, 0xbf, 0xff, 0x23, 0xf0, 0x32, 0x1b, 0x6d, 0xf9, 0xe6, 0xdb, 0xeb, 0x7f,
	0xf6, 0xad, 0x79, 0xa5, 0x91, 0xad, 0x4b, 0x9a, 0x11, 0xb7, 0xcc, 0xa4, 0x5f, 0x66, 0x72, 0xf9,
	0x17, 0x20, 0x0b, 0xdd, 0x29, 0x2f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xd3, 0xd3, 0x05,
	0x22, 0x04, 0x00, 0x00,
}
